:javascript
  $(function() {
    var onSelected = function(selectedDate) {
      var option = this.id == "assignment_request_start_date_datepicker" ? "minDate" : "maxDate";
      instance = $( this ).data( "datepicker" );
      date = $.datepicker.parseDate(
        instance.settings.dateFormat ||
        $.datepicker._defaults.dateFormat, selectedDate, instance.settings);
      var dates = $("#assignment_request_start_date_datepicker, #assignment_request_end_date_datepicker").datepicker();
      dates.not( this ).datepicker( "option", option, date );
    };

    $("#assignment_request_start_date").hide();
    $("<input type=\"text\" id=\"assignment_request_start_date_datepicker\"/>").
    insertAfter("#assignment_request_start_date").
    datepicker({
      numberOfMonths: 3,
      minDate: new Date(),
      altField: "#assignment_request_start_date",
      altFormat: "yy-mm-dd",
      dateFormat: "DD, MM d, yy",
      autoSize: true,
      onSelect: onSelected
    });
    var start_date = $("#assignment_request_start_date").val();
    $("#assignment_request_start_date_datepicker").datepicker("setDate",
      $.datepicker.parseDate("yy-mm-dd", start_date));
    $("#assignment_request_end_date").hide();
    $("<input type=\"text\" id=\"assignment_request_end_date_datepicker\"/>").
    insertAfter("#assignment_request_end_date").
    datepicker({
      numberOfMonths: 3,
      minDate: new Date(),
      altField: "#assignment_request_end_date",
      altFormat: "yy-mm-dd",
      dateFormat: "DD, MM d, yy",
      autoSize: true,
      onSelect: onSelected
    });
    var end_date = $("#assignment_request_end_date").val();
    $("#assignment_request_end_date_datepicker").datepicker("setDate",
      $.datepicker.parseDate("yy-mm-dd", end_date));
  });

%div.form-container
  = semantic_form_for [@section, assignment_request] do |assignment_request_form|
    = assignment_request_form.inputs do
      = assignment_request_form.input :requester, :as => :select, :collection => @section.members
      = assignment_request_form.input :shift, :as => :select, :collection => @section.active_shifts
      = assignment_request_form.input :start_date, :as => :string
      = assignment_request_form.input :end_date, :as => :string
      = assignment_request_form.input :comments, :input_html => { :rows => 5 }
    = assignment_request_form.buttons do
      = assignment_request_form.commit_button :button_html => { :class => "button" }
      %li
        or
        = link_to "Cancel", section_assignment_requests_path(@section)
